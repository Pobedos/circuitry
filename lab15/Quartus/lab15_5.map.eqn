-- Copyright (C) 1991-2005 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.
--A1L3 is even~56
--operation mode is normal

A1L3 = X[0] $ X[2] $ X[6] $ X[1];


--A1L4 is even~57
--operation mode is normal

A1L4 = X[3] $ d $ X[5] $ X[4];


--A1L5 is even~58
--operation mode is normal

A1L5 = A1L3 $ A1L4 $ !X[7];


--X[0] is X[0]
--operation mode is input

X[0] = INPUT();


--X[2] is X[2]
--operation mode is input

X[2] = INPUT();


--X[6] is X[6]
--operation mode is input

X[6] = INPUT();


--X[1] is X[1]
--operation mode is input

X[1] = INPUT();


--X[3] is X[3]
--operation mode is input

X[3] = INPUT();


--d is d
--operation mode is input

d = INPUT();


--X[5] is X[5]
--operation mode is input

X[5] = INPUT();


--X[4] is X[4]
--operation mode is input

X[4] = INPUT();


--X[7] is X[7]
--operation mode is input

X[7] = INPUT();


--even is even
--operation mode is bidir

even_tri_out = TRI(!A1L5, VCC);
even = BIDIR(even_tri_out);


--odd is odd
--operation mode is bidir

odd_tri_out = TRI(A1L5, VCC);
odd = BIDIR(odd_tri_out);


