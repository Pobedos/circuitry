--lpm_add_sub DEVICE_FAMILY="Stratix" LPM_DIRECTION="SUB" LPM_WIDTH=4 cout dataa datab result
--VERSION_BEGIN 5.0 cbx_cycloneii 2004:12:20:14:28:52:SJ cbx_lpm_add_sub 2005:04:12:13:30:42:SJ cbx_mgl 2005:04:13:17:26:48:SJ cbx_stratix 2005:03:14:17:09:02:SJ cbx_stratixii 2004:12:22:13:27:12:SJ  VERSION_END


--  Copyright (C) 1988-2005 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION carry_sum (cin, sin)
RETURNS ( cout, sout);

--synthesis_resources = lut 4 
SUBDESIGN add_sub_pf8
( 
	cout	:	output;
	dataa[3..0]	:	input;
	datab[3..0]	:	input;
	result[3..0]	:	output;
) 
VARIABLE 
	add_sub_cella[3..0] : carry_sum;
	datab_node[3..0]	: WIRE;
	main_cin_wire	: WIRE;

BEGIN 
	add_sub_cella[0].cin = ((dataa[0..0] & datab_node[0..0]) # ((dataa[0..0] # datab_node[0..0]) & main_cin_wire));
	add_sub_cella[1].cin = ((dataa[1..1] & datab_node[1..1]) # ((dataa[1..1] # datab_node[1..1]) & add_sub_cella[0].cout));
	add_sub_cella[2].cin = ((dataa[2..2] & datab_node[2..2]) # ((dataa[2..2] # datab_node[2..2]) & add_sub_cella[1].cout));
	add_sub_cella[3].cin = ((dataa[3..3] & datab_node[3..3]) # ((dataa[3..3] # datab_node[3..3]) & add_sub_cella[2].cout));
	add_sub_cella[0].sin = ((dataa[0..0] $ datab_node[0..0]) $ main_cin_wire);
	add_sub_cella[1].sin = ((dataa[1..1] $ datab_node[1..1]) $ add_sub_cella[0].cout);
	add_sub_cella[2].sin = ((dataa[2..2] $ datab_node[2..2]) $ add_sub_cella[1].cout);
	add_sub_cella[3].sin = ((dataa[3..3] $ datab_node[3..3]) $ add_sub_cella[2].cout);
	cout = add_sub_cella[3].cout;
	datab_node[] = (! datab[]);
	main_cin_wire = B"1";
	result[] = add_sub_cella[].sout;
END;
--VALID FILE
